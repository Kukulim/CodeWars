using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Drawing;
using System.Linq;

namespace CodeWars
{
    internal static class Program
    {
        private static void Main()
        {
            Console.WriteLine(Part(4));
        }
        public static string Part(long n)
        {
            var test = printAllUniqueParts(n);
            test.Sort();
            var result = "";
            var range = test.Max() - test.Min();
            double average = (double)test.Sum() / (double)test.Count;
            double median = 0;
            if (test.Count%2==0)
            {
                median = (double)(test[test.Count / 2]+ test[(test.Count / 2)-1])/2;
            }
            else
            {
                median = test[test.Count / 2];
            }
            result = "Range: " + range + " Average: " + average.ToString("F2") + " Median: "+median.ToString("F2");
            return result;
        }

        static long printArray(long[] p, long n)
        {
            long result = 1;
            for (int i = 0; i < n; i++)
            {
                result*=(p[i]);
            }
            return result;
        }
        static List<long> printAllUniqueParts(long n)
        {
            var result = new List<long>();
            long[] p = new long[n];
            long k = 0;
            p[k] = n;
            while (true)
            {
                result.Add(printArray(p, k + 1));
                long rem_val = 0;

                while (k >= 0 && p[k] == 1)
                {
                    rem_val += p[k];
                    k--;
                }
                if (k < 0)
                    return result.Distinct().ToList();
                p[k]--;
                rem_val++;
                while (rem_val > p[k])
                {
                    p[k + 1] = p[k];
                    rem_val = rem_val - p[k];
                    k++;
                }
                p[k + 1] = rem_val;
                k++;
            }
        }
    }
}